package repaso;

import java.util.stream.Stream;

/*Crea una función que reciba dos cadenas como parámetro (str1, str2) e imprima otras dos cadenas como salida (out1, out2).
* - out1 contendrá todos los caracteres presentes en la str1 pero NO estén presentes en str2.
*- out2 contendrá todos los caracteres presentes en la str2 pero NO estén presentes en str1. 
*(Ejercicio extraído de la plataforma de MoureDev, aquí en git también)
*/
public class Expresiones_equilibradas {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	
	public String[] letrasRepetidas (String cadena1, String cadena2){
		String resultado1 = cadena1.chars()
										   .mapToObj(c->(char)c)
										   .filter(c->cadena2.indexOf(c)>=0)
										   .collect(StringBuilder::new,       
								                  StringBuilder::append,     
								                  StringBuilder::append)    
								           .toString();	
		String resultado2 = cadena2.chars()
				   .mapToObj(c->(char)c)
				   .filter(c->cadena2.indexOf(c)>=0)
				   .collect(StringBuilder::new,       
		                  StringBuilder::append,     
		                  StringBuilder::append)    
		           .toString();
	return new String[]{resultado1, resultado2};
	}
}
